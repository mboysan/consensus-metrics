name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test
        run: >
          mvn clean verify

      - name: Build and release
        env:
          # This is the secret for mvn-repo repository which is fetched from https://github.com/settings/tokens
          # Once rotated, make sure you also update the secret value in the repository settings.
          # (i.e. goto repository -> settings/secrets/actions and edit MVN_REPO_KEY)
          MVN_REPO_KEY: ${{ secrets.MVN_REPO_KEY }}
          BUILD_NUMBER: ${{github.run_number}}
        run: |
          REPO_DIR=$(pwd)
          
          # ------------------------------------- build and deploy as maven repository package
          echo "Build and publish..."

          PROJ_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "Current project version is $PROJ_VERSION"
          
          if [ "$BRANCH_NAME" == "main" ]; then
            echo "On main branch, not changing version"
            mvn clean install -DskipTests
          else
            PROJ_VERSION="$PROJ_VERSION-SNAPSHOT"
            echo "On branch $BRANCH_NAME, setting project version to $PROJ_VERSION"
            mvn -Drevision=$PROJ_VERSION clean install -DskipTests
          fi
          
          # get repo branch
          cd $HOME
          git clone https://github.com/mboysan/mvn-repo.git
          cd mvn-repo
          
          mkdir -p ./com/mboysan/consensus/
          cp -avr $HOME/.m2/repository/com/mboysan/consensus/* ./com/mboysan/consensus/
          
          # configure git
          git config --global user.email "dev@mboysan.com"
          git config --global user.name "mboysan"
          git remote rm origin
          git remote add origin https://${MVN_REPO_KEY}@github.com/mboysan/mvn-repo.git
          
          # commit & push files
          git add --all
          git commit --message "build consensus-metrics-v${PROJ_VERSION}_${BUILD_NUMBER}"
          git push --quiet origin master

          # ------------------------------------- release the jar file
          echo "Release jar..."
          
          git fetch
          git checkout releases
          
          mkdir -p consensus
          cp -avr $REPO_DIR/metrics-distribution/target/*jar-with-dependencies.jar consensus/
          
          # commit & push files
          git add --all
          git commit --message "release consensus-metrics-v${PROJ_VERSION}_${BUILD_NUMBER}"
          git push --quiet origin releases